plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
	id 'com.netflix.dgs.codegen' version '6.2.1'
}

group = 'pl.dziadkouskaya'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(22)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

//ext {
//	set('springAiVersion', "1.0.0-M1")
//}

dependencies {
//	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-database-postgresql'
//	implementation 'org.springframework.ai:spring-ai-openai-spring-boot-starter'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation group: 'org.springframework.graphql', name: 'spring-graphql', version: '1.2.7'
	implementation group: 'jakarta.persistence', name: 'jakarta.persistence-api', version: '3.2.0'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '3.2.7'
}

//dependencyManagement {
//	imports {
//		mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
//	}
//}

generateJava {
	schemaPaths = ["${projectDir}/src/main/resources/graphql-client"]
	packageName = 'pl.dziadkouskaya.graphql.codegen'
	generateClient = true
}

tasks.named('test') {
	useJUnitPlatform()
}
